/* 
*Copyright (c) 2021, Alibaba Group;
*Licensed under the Apache License, Version 2.0 (the "License");
*you may not use this file except in compliance with the License.
*You may obtain a copy of the License at

*   http://www.apache.org/licenses/LICENSE-2.0

*Unless required by applicable law or agreed to in writing, software
*distributed under the License is distributed on an "AS IS" BASIS,
*WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*See the License for the specific language governing permissions and
*limitations under the License.
*/

MEMORY
{
MEM1(RWX)  : ORIGIN = ${hex(toolchain["imem_s_addr"])},  LENGTH = ${hex(toolchain["imem_range"])}
MEM2(RWX)  : ORIGIN = ${hex(toolchain["dmem_s_addr"])},  LENGTH = ${hex(toolchain["dmem_range"])}
}
__kernel_stack = ${hex(toolchain["stack_addr"])};

ENTRY(__start)

SECTIONS {
    .text :
    {
        crt0.o (.text)
        *(.text*)
        . = ALIGN(0x10);
    } >MEM1
    .rodata :
    {
      *(.rodata*)
          . = ALIGN(0x4);
        __erodata = .;
    } > MEM1
    .data :
    {
      . = ALIGN(0x4);
      __data_start__ = .;
        *(.data*)
        *(.eh_frame*)
          . = ALIGN(0x4);
        __data_end__ = .;
    } >MEM2 AT > MEM1
    .bss :
    {
      . = ALIGN(0x4);
      __bss_start__ = .;
        *(.bss)
         . = ALIGN(0x4);
        __bss_end__ = .;
          *.(COMMON)
    } >MEM2
}


